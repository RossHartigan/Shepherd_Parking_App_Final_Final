name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Automated Android build action
      - name: Automated Build Android App
        uses: amirisback/automated-build-android-app-with-github-action@2.2.4

      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Set up the Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools-version: '30.0.3'

      # Grant execute permission for the Gradle wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Cache Gradle dependencies to speed up subsequent builds
      - name: Cache Gradle files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Build the project and run unit tests
      - name: Build and Run Unit Tests
        run: ./gradlew build test

      # Deploy to Google Play (example of market plugin)
      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.example.app # Replace with your app's package name
          releaseFile: app/build/outputs/apk/release/app-release.apk
          track: production # Options: production, beta, alpha, internal
